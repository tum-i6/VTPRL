# syntax=docker/dockerfile:1
FROM nvidia/cudagl:10.0-devel-ubuntu18.04
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/3bf863cc.pub
RUN apt-get update && apt-get  install -y ffmpeg libsm6 libxext6 python3.7  python3.7-dev python3-pip curl&& \
    rm /usr/bin/python3 && ln -s /usr/bin/python3.7 /usr/bin/python3 && \
    python3 -m pip install --upgrade pip

# Install ROS
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list' && \
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add && \
    apt-get update && apt-get -y install ros-melodic-ros-base && \
    echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc && \
    apt-get install -y python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential && \
    rosdep init && rosdep update

# Install DartPy dependencies
RUN apt-get install -y build-essential cmake pkg-config git && \
    apt-get install -y libeigen3-dev libassimp-dev libccd-dev libfcl-dev libboost-regex-dev libboost-system-dev && \
    apt-get install -y libtinyxml2-dev liburdfdom-dev && \
    apt-get install -y libxi-dev libxmu-dev freeglut3-dev libopenscenegraph-dev libnlopt-dev && \
    python3 -m pip install pytest && \
    mkdir /home/repos && cd /home/repos && git clone https://github.com/pybind/pybind11 -b 'v2.2.4' --single-branch --depth 1 && \
    cd pybind11 && mkdir build && cd build && cmake .. && make -j4 && make install && \
    cd /home/repos && git clone https://github.com/dartsim/dart.git && cd dart && git checkout tags/v6.11.1

# Install DartPy from source with new bindings
COPY resources/dart_additional_files /home/repos/dart
RUN cd /home/repos/dart && mkdir build && cd build && \
    cmake .. -DCMAKE_INSTALL_PREFIX=/usr/ -DCMAKE_BUILD_TYPE=Release -DDART_BUILD_DARTPY=ON && \
    make -j4 dartpy && make install-dartpy

# Install Requirements
ADD docker/requirements.txt /home/requirements.txt
RUN python3 -m pip install -r /home/requirements.txt

# Install Stable-Baselines-3
COPY external/stable-baselines3 /home/repos/stable-baselines3
RUN cd /usr/local/lib/python3.7/dist-packages/ && python3 /home/repos/stable-baselines3/setup.py develop
ENV PYTHONPATH='/home/repos/stable-baselines3'

WORKDIR /home