# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='service.proto',
  package='communication',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\rservice.proto\x12\rcommunication\"\x1b\n\x0bStepRequest\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"\x19\n\tStepReply\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t2V\n\x14\x43ommunicationService\x12>\n\x04step\x12\x1a.communication.StepRequest\x1a\x18.communication.StepReply\"\x00\x62\x06proto3'
)




_STEPREQUEST = _descriptor.Descriptor(
  name='StepRequest',
  full_name='communication.StepRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='communication.StepRequest.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=59,
)


_STEPREPLY = _descriptor.Descriptor(
  name='StepReply',
  full_name='communication.StepReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='communication.StepReply.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=86,
)

DESCRIPTOR.message_types_by_name['StepRequest'] = _STEPREQUEST
DESCRIPTOR.message_types_by_name['StepReply'] = _STEPREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

StepRequest = _reflection.GeneratedProtocolMessageType('StepRequest', (_message.Message,), {
  'DESCRIPTOR' : _STEPREQUEST,
  '__module__' : 'service_pb2'
  # @@protoc_insertion_point(class_scope:communication.StepRequest)
  })
_sym_db.RegisterMessage(StepRequest)

StepReply = _reflection.GeneratedProtocolMessageType('StepReply', (_message.Message,), {
  'DESCRIPTOR' : _STEPREPLY,
  '__module__' : 'service_pb2'
  # @@protoc_insertion_point(class_scope:communication.StepReply)
  })
_sym_db.RegisterMessage(StepReply)



_COMMUNICATIONSERVICE = _descriptor.ServiceDescriptor(
  name='CommunicationService',
  full_name='communication.CommunicationService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=88,
  serialized_end=174,
  methods=[
  _descriptor.MethodDescriptor(
    name='step',
    full_name='communication.CommunicationService.step',
    index=0,
    containing_service=None,
    input_type=_STEPREQUEST,
    output_type=_STEPREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_COMMUNICATIONSERVICE)

DESCRIPTOR.services_by_name['CommunicationService'] = _COMMUNICATIONSERVICE

# @@protoc_insertion_point(module_scope)
